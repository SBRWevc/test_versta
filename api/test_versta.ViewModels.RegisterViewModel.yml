### YamlMime:ManagedReference
items:
- uid: test_versta.ViewModels.RegisterViewModel
  commentId: T:test_versta.ViewModels.RegisterViewModel
  id: RegisterViewModel
  parent: test_versta.ViewModels
  children:
  - test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  - test_versta.ViewModels.RegisterViewModel.Email
  - test_versta.ViewModels.RegisterViewModel.FullName
  - test_versta.ViewModels.RegisterViewModel.Password
  - test_versta.ViewModels.RegisterViewModel.ReturnUrl
  langs:
  - csharp
  - vb
  name: RegisterViewModel
  nameWithType: RegisterViewModel
  fullName: test_versta.ViewModels.RegisterViewModel
  type: Class
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: RegisterViewModel
    path: ViewModels/RegisterViewModel.cs
    startLine: 7
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: Модель представления для регистрации нового пользователя.
  example: []
  syntax:
    content: public class RegisterViewModel
    content.vb: Public Class RegisterViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: test_versta.ViewModels.RegisterViewModel.FullName
  commentId: P:test_versta.ViewModels.RegisterViewModel.FullName
  id: FullName
  parent: test_versta.ViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: RegisterViewModel.FullName
  fullName: test_versta.ViewModels.RegisterViewModel.FullName
  type: Property
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: FullName
    path: ViewModels/RegisterViewModel.cs
    startLine: 12
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: Полное имя пользователя.
  example: []
  syntax:
    content: >-
      [Required]

      public string FullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property FullName As String
  overload: test_versta.ViewModels.RegisterViewModel.FullName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: test_versta.ViewModels.RegisterViewModel.Email
  commentId: P:test_versta.ViewModels.RegisterViewModel.Email
  id: Email
  parent: test_versta.ViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: test_versta.ViewModels.RegisterViewModel.Email
  type: Property
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: Email
    path: ViewModels/RegisterViewModel.cs
    startLine: 18
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: Адрес электронной почты пользователя.
  example: []
  syntax:
    content: >-
      [Required]

      [EmailAddress]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <EmailAddress>

      Public Property Email As String
  overload: test_versta.ViewModels.RegisterViewModel.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
    arguments: []
- uid: test_versta.ViewModels.RegisterViewModel.Password
  commentId: P:test_versta.ViewModels.RegisterViewModel.Password
  id: Password
  parent: test_versta.ViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: test_versta.ViewModels.RegisterViewModel.Password
  type: Property
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: Password
    path: ViewModels/RegisterViewModel.cs
    startLine: 25
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: Пароль пользователя.
  example: []
  syntax:
    content: >-
      [Required]

      [DataType(DataType.Password)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <DataType(DataType.Password)>

      Public Property Password As String
  overload: test_versta.ViewModels.RegisterViewModel.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
- uid: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  commentId: P:test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  id: ConfirmPassword
  parent: test_versta.ViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  type: Property
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: ConfirmPassword
    path: ViewModels/RegisterViewModel.cs
    startLine: 32
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: Подтверждение пароля. Должно совпадать с полем <xref href="test_versta.ViewModels.RegisterViewModel.Password" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataType(DataType.Password)]

      [Compare("Password", ErrorMessage = "Пароли не совпадают.")]

      public string ConfirmPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataType(DataType.Password)>

      <Compare("Password", ErrorMessage:="Пароли не совпадают.")>

      Public Property ConfirmPassword As String
  overload: test_versta.ViewModels.RegisterViewModel.ConfirmPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  - type: System.ComponentModel.DataAnnotations.CompareAttribute
    ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Password
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Пароли не совпадают.
- uid: test_versta.ViewModels.RegisterViewModel.ReturnUrl
  commentId: P:test_versta.ViewModels.RegisterViewModel.ReturnUrl
  id: ReturnUrl
  parent: test_versta.ViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: ReturnUrl
  nameWithType: RegisterViewModel.ReturnUrl
  fullName: test_versta.ViewModels.RegisterViewModel.ReturnUrl
  type: Property
  source:
    remote:
      path: ViewModels/RegisterViewModel.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: ReturnUrl
    path: ViewModels/RegisterViewModel.cs
    startLine: 39
  assemblies:
  - test_versta
  namespace: test_versta.ViewModels
  summary: URL-адрес, на который будет перенаправлен пользователь после успешной регистрации.
  example: []
  syntax:
    content: public string? ReturnUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReturnUrl As String
  overload: test_versta.ViewModels.RegisterViewModel.ReturnUrl*
references:
- uid: test_versta.ViewModels
  commentId: N:test_versta.ViewModels
  href: test_versta.html
  name: test_versta.ViewModels
  nameWithType: test_versta.ViewModels
  fullName: test_versta.ViewModels
  spec.csharp:
  - uid: test_versta
    name: test_versta
    href: test_versta.html
  - name: .
  - uid: test_versta.ViewModels
    name: ViewModels
    href: test_versta.ViewModels.html
  spec.vb:
  - uid: test_versta
    name: test_versta
    href: test_versta.html
  - name: .
  - uid: test_versta.ViewModels
    name: ViewModels
    href: test_versta.ViewModels.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: test_versta.ViewModels.RegisterViewModel.FullName*
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.FullName
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_FullName
  name: FullName
  nameWithType: RegisterViewModel.FullName
  fullName: test_versta.ViewModels.RegisterViewModel.FullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: test_versta.ViewModels.RegisterViewModel.Email*
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.Email
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_Email
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: test_versta.ViewModels.RegisterViewModel.Email
- uid: test_versta.ViewModels.RegisterViewModel.Password*
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.Password
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_Password
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: test_versta.ViewModels.RegisterViewModel.Password
- uid: test_versta.ViewModels.RegisterViewModel.Password
  commentId: P:test_versta.ViewModels.RegisterViewModel.Password
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_Password
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: test_versta.ViewModels.RegisterViewModel.Password
- uid: test_versta.ViewModels.RegisterViewModel.ConfirmPassword*
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_ConfirmPassword
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
- uid: test_versta.ViewModels.RegisterViewModel.ReturnUrl*
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.ReturnUrl
  href: test_versta.ViewModels.RegisterViewModel.html#test_versta_ViewModels_RegisterViewModel_ReturnUrl
  name: ReturnUrl
  nameWithType: RegisterViewModel.ReturnUrl
  fullName: test_versta.ViewModels.RegisterViewModel.ReturnUrl
