### YamlMime:ManagedReference
items:
- uid: test_versta.Models.Order
  commentId: T:test_versta.Models.Order
  id: Order
  parent: test_versta.Models
  children:
  - test_versta.Models.Order.Client
  - test_versta.Models.Order.ClientId
  - test_versta.Models.Order.OrderId
  - test_versta.Models.Order.PickupDate
  - test_versta.Models.Order.RecipientAddress
  - test_versta.Models.Order.RecipientCity
  - test_versta.Models.Order.SenderAddress
  - test_versta.Models.Order.SenderCity
  - test_versta.Models.Order.Weight
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: Order
  fullName: test_versta.Models.Order
  type: Class
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: Order
    path: Models/Order.cs
    startLine: 9
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Представляет заказ на доставку.
  example: []
  syntax:
    content: public class Order
    content.vb: Public Class Order
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: test_versta.Models.Order.OrderId
  commentId: P:test_versta.Models.Order.OrderId
  id: OrderId
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: OrderId
  nameWithType: Order.OrderId
  fullName: test_versta.Models.Order.OrderId
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: OrderId
    path: Models/Order.cs
    startLine: 14
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Уникальный идентификатор заказа.
  example: []
  syntax:
    content: >-
      [Key]

      public int OrderId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      Public Property OrderId As Integer
  overload: test_versta.Models.Order.OrderId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
- uid: test_versta.Models.Order.SenderCity
  commentId: P:test_versta.Models.Order.SenderCity
  id: SenderCity
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: SenderCity
  nameWithType: Order.SenderCity
  fullName: test_versta.Models.Order.SenderCity
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: SenderCity
    path: Models/Order.cs
    startLine: 20
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Город отправителя.
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите город отправителя")]

      [Display(Name = "Город отправителя")]

      [StringLength(100, MinimumLength = 2, ErrorMessage = "Город отправителя должен содержать от 2 до 100 символов")]

      public string SenderCity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Укажите город отправителя")>

      <Display(Name:="Город отправителя")>

      <StringLength(100, MinimumLength:=2, ErrorMessage:="Город отправителя должен содержать от 2 до 100 символов")>

      Public Property SenderCity As String
  overload: test_versta.Models.Order.SenderCity*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите город отправителя
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Город отправителя
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
    - name: ErrorMessage
      type: System.String
      value: Город отправителя должен содержать от 2 до 100 символов
- uid: test_versta.Models.Order.SenderAddress
  commentId: P:test_versta.Models.Order.SenderAddress
  id: SenderAddress
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: SenderAddress
  nameWithType: Order.SenderAddress
  fullName: test_versta.Models.Order.SenderAddress
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: SenderAddress
    path: Models/Order.cs
    startLine: 28
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Адрес отправителя.
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите адрес отправителя")]

      [Display(Name = "Адрес отправителя")]

      [StringLength(200, MinimumLength = 5, ErrorMessage = "Адрес отправителя должен содержать от 5 до 200 символов")]

      public string SenderAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Укажите адрес отправителя")>

      <Display(Name:="Адрес отправителя")>

      <StringLength(200, MinimumLength:=5, ErrorMessage:="Адрес отправителя должен содержать от 5 до 200 символов")>

      Public Property SenderAddress As String
  overload: test_versta.Models.Order.SenderAddress*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите адрес отправителя
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Адрес отправителя
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 200
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 5
    - name: ErrorMessage
      type: System.String
      value: Адрес отправителя должен содержать от 5 до 200 символов
- uid: test_versta.Models.Order.RecipientCity
  commentId: P:test_versta.Models.Order.RecipientCity
  id: RecipientCity
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: RecipientCity
  nameWithType: Order.RecipientCity
  fullName: test_versta.Models.Order.RecipientCity
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: RecipientCity
    path: Models/Order.cs
    startLine: 36
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Город получателя.
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите город получателя")]

      [Display(Name = "Город получателя")]

      [StringLength(100, MinimumLength = 2, ErrorMessage = "Город получателя должен содержать от 2 до 100 символов")]

      public string RecipientCity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Укажите город получателя")>

      <Display(Name:="Город получателя")>

      <StringLength(100, MinimumLength:=2, ErrorMessage:="Город получателя должен содержать от 2 до 100 символов")>

      Public Property RecipientCity As String
  overload: test_versta.Models.Order.RecipientCity*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите город получателя
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Город получателя
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
    - name: ErrorMessage
      type: System.String
      value: Город получателя должен содержать от 2 до 100 символов
- uid: test_versta.Models.Order.RecipientAddress
  commentId: P:test_versta.Models.Order.RecipientAddress
  id: RecipientAddress
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: RecipientAddress
  nameWithType: Order.RecipientAddress
  fullName: test_versta.Models.Order.RecipientAddress
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: RecipientAddress
    path: Models/Order.cs
    startLine: 44
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Адрес получателя.
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите адрес получателя")]

      [Display(Name = "Адрес получателя")]

      [StringLength(200, MinimumLength = 5, ErrorMessage = "Адрес получателя должен содержать от 5 до 200 символов")]

      public string RecipientAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Укажите адрес получателя")>

      <Display(Name:="Адрес получателя")>

      <StringLength(200, MinimumLength:=5, ErrorMessage:="Адрес получателя должен содержать от 5 до 200 символов")>

      Public Property RecipientAddress As String
  overload: test_versta.Models.Order.RecipientAddress*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите адрес получателя
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Адрес получателя
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 200
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 5
    - name: ErrorMessage
      type: System.String
      value: Адрес получателя должен содержать от 5 до 200 символов
- uid: test_versta.Models.Order.Weight
  commentId: P:test_versta.Models.Order.Weight
  id: Weight
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: Order.Weight
  fullName: test_versta.Models.Order.Weight
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: Weight
    path: Models/Order.cs
    startLine: 52
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Вес груза (в кг).
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите вес груза")]

      [Display(Name = "Вес груза")]

      [Range(0.1, 1000, ErrorMessage = "Вес груза должен быть в пределах от 0.1 до 1000 кг")]

      public decimal Weight { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <Required(ErrorMessage:="Укажите вес груза")>

      <Display(Name:="Вес груза")>

      <Range(0.1, 1000, ErrorMessage:="Вес груза должен быть в пределах от 0.1 до 1000 кг")>

      Public Property Weight As Decimal
  overload: test_versta.Models.Order.Weight*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите вес груза
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Вес груза
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)
    arguments:
    - type: System.Double
      value: 0.1
    - type: System.Double
      value: 1000
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Вес груза должен быть в пределах от 0.1 до 1000 кг
- uid: test_versta.Models.Order.PickupDate
  commentId: P:test_versta.Models.Order.PickupDate
  id: PickupDate
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: PickupDate
  nameWithType: Order.PickupDate
  fullName: test_versta.Models.Order.PickupDate
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: PickupDate
    path: Models/Order.cs
    startLine: 60
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Дата забора груза.
  example: []
  syntax:
    content: >-
      [Required(ErrorMessage = "Укажите дату забора груза")]

      [Display(Name = "Дата забора груза")]

      [DataType(DataType.Date)]

      public DateTime PickupDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Required(ErrorMessage:="Укажите дату забора груза")>

      <Display(Name:="Дата забора груза")>

      <DataType(DataType.Date)>

      Public Property PickupDate As Date
  overload: test_versta.Models.Order.PickupDate*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Укажите дату забора груза
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Дата забора груза
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 2
- uid: test_versta.Models.Order.ClientId
  commentId: P:test_versta.Models.Order.ClientId
  id: ClientId
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: Order.ClientId
  fullName: test_versta.Models.Order.ClientId
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: ClientId
    path: Models/Order.cs
    startLine: 69
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Идентификатор клиента, оформившего заказ.
  example: []
  syntax:
    content: public string? ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: test_versta.Models.Order.ClientId*
- uid: test_versta.Models.Order.Client
  commentId: P:test_versta.Models.Order.Client
  id: Client
  parent: test_versta.Models.Order
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Order.Client
  fullName: test_versta.Models.Order.Client
  type: Property
  source:
    remote:
      path: Models/Order.cs
      branch: master
      repo: https://github.com/SBRWevc/test_versta.git
    id: Client
    path: Models/Order.cs
    startLine: 74
  assemblies:
  - test_versta
  namespace: test_versta.Models
  summary: Клиент, оформивший заказ.
  example: []
  syntax:
    content: public ApplicationUser? Client { get; set; }
    parameters: []
    return:
      type: test_versta.Models.ApplicationUser
    content.vb: Public Property Client As ApplicationUser
  overload: test_versta.Models.Order.Client*
references:
- uid: test_versta.Models
  commentId: N:test_versta.Models
  href: test_versta.html
  name: test_versta.Models
  nameWithType: test_versta.Models
  fullName: test_versta.Models
  spec.csharp:
  - uid: test_versta
    name: test_versta
    href: test_versta.html
  - name: .
  - uid: test_versta.Models
    name: Models
    href: test_versta.Models.html
  spec.vb:
  - uid: test_versta
    name: test_versta
    href: test_versta.html
  - name: .
  - uid: test_versta.Models
    name: Models
    href: test_versta.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: test_versta.Models.Order.OrderId*
  commentId: Overload:test_versta.Models.Order.OrderId
  href: test_versta.Models.Order.html#test_versta_Models_Order_OrderId
  name: OrderId
  nameWithType: Order.OrderId
  fullName: test_versta.Models.Order.OrderId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: test_versta.Models.Order.SenderCity*
  commentId: Overload:test_versta.Models.Order.SenderCity
  href: test_versta.Models.Order.html#test_versta_Models_Order_SenderCity
  name: SenderCity
  nameWithType: Order.SenderCity
  fullName: test_versta.Models.Order.SenderCity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: test_versta.Models.Order.SenderAddress*
  commentId: Overload:test_versta.Models.Order.SenderAddress
  href: test_versta.Models.Order.html#test_versta_Models_Order_SenderAddress
  name: SenderAddress
  nameWithType: Order.SenderAddress
  fullName: test_versta.Models.Order.SenderAddress
- uid: test_versta.Models.Order.RecipientCity*
  commentId: Overload:test_versta.Models.Order.RecipientCity
  href: test_versta.Models.Order.html#test_versta_Models_Order_RecipientCity
  name: RecipientCity
  nameWithType: Order.RecipientCity
  fullName: test_versta.Models.Order.RecipientCity
- uid: test_versta.Models.Order.RecipientAddress*
  commentId: Overload:test_versta.Models.Order.RecipientAddress
  href: test_versta.Models.Order.html#test_versta_Models_Order_RecipientAddress
  name: RecipientAddress
  nameWithType: Order.RecipientAddress
  fullName: test_versta.Models.Order.RecipientAddress
- uid: test_versta.Models.Order.Weight*
  commentId: Overload:test_versta.Models.Order.Weight
  href: test_versta.Models.Order.html#test_versta_Models_Order_Weight
  name: Weight
  nameWithType: Order.Weight
  fullName: test_versta.Models.Order.Weight
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: test_versta.Models.Order.PickupDate*
  commentId: Overload:test_versta.Models.Order.PickupDate
  href: test_versta.Models.Order.html#test_versta_Models_Order_PickupDate
  name: PickupDate
  nameWithType: Order.PickupDate
  fullName: test_versta.Models.Order.PickupDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: test_versta.Models.Order.ClientId*
  commentId: Overload:test_versta.Models.Order.ClientId
  href: test_versta.Models.Order.html#test_versta_Models_Order_ClientId
  name: ClientId
  nameWithType: Order.ClientId
  fullName: test_versta.Models.Order.ClientId
- uid: test_versta.Models.Order.Client*
  commentId: Overload:test_versta.Models.Order.Client
  href: test_versta.Models.Order.html#test_versta_Models_Order_Client
  name: Client
  nameWithType: Order.Client
  fullName: test_versta.Models.Order.Client
- uid: test_versta.Models.ApplicationUser
  commentId: T:test_versta.Models.ApplicationUser
  parent: test_versta.Models
  href: test_versta.Models.ApplicationUser.html
  name: ApplicationUser
  nameWithType: ApplicationUser
  fullName: test_versta.Models.ApplicationUser
