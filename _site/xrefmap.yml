### YamlMime:XRefMap
sorted: true
references:
- uid: test_versta.Controllers
  name: test_versta.Controllers
  href: api/test_versta.Controllers.yml
  commentId: N:test_versta.Controllers
  fullName: test_versta.Controllers
  nameWithType: test_versta.Controllers
- uid: test_versta.Controllers.AccountController
  name: AccountController
  href: api/test_versta.Controllers.AccountController.yml
  commentId: T:test_versta.Controllers.AccountController
  fullName: test_versta.Controllers.AccountController
  nameWithType: AccountController
- uid: test_versta.Controllers.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{test_versta.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{test_versta.Models.ApplicationUser})
  name: AccountController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>)
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{test_versta.Models.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{test_versta.Models.ApplicationUser})
  name.vb: New(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser))
  fullName: test_versta.Controllers.AccountController.AccountController(Microsoft.AspNetCore.Identity.UserManager<test_versta.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.SignInManager<test_versta.Models.ApplicationUser>)
  fullName.vb: test_versta.Controllers.AccountController.New(Microsoft.AspNetCore.Identity.UserManager(Of test_versta.Models.ApplicationUser), Microsoft.AspNetCore.Identity.SignInManager(Of test_versta.Models.ApplicationUser))
  nameWithType: AccountController.AccountController(UserManager<ApplicationUser>, SignInManager<ApplicationUser>)
  nameWithType.vb: AccountController.New(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser))
- uid: test_versta.Controllers.AccountController.#ctor*
  name: AccountController
  href: api/test_versta.Controllers.AccountController.yml
  commentId: Overload:test_versta.Controllers.AccountController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: test_versta.Controllers.AccountController.AccountController
  fullName.vb: test_versta.Controllers.AccountController.New
  nameWithType: AccountController.AccountController
  nameWithType.vb: AccountController.New
- uid: test_versta.Controllers.AccountController.Login(System.String)
  name: Login(string?)
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.Login(System.String)
  name.vb: Login(String)
  fullName: test_versta.Controllers.AccountController.Login(string?)
  fullName.vb: test_versta.Controllers.AccountController.Login(String)
  nameWithType: AccountController.Login(string?)
  nameWithType.vb: AccountController.Login(String)
- uid: test_versta.Controllers.AccountController.Login(test_versta.ViewModels.LoginViewModel)
  name: Login(LoginViewModel)
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.Login(test_versta.ViewModels.LoginViewModel)
  fullName: test_versta.Controllers.AccountController.Login(test_versta.ViewModels.LoginViewModel)
  nameWithType: AccountController.Login(LoginViewModel)
- uid: test_versta.Controllers.AccountController.Login*
  name: Login
  href: api/test_versta.Controllers.AccountController.yml
  commentId: Overload:test_versta.Controllers.AccountController.Login
  isSpec: "True"
  fullName: test_versta.Controllers.AccountController.Login
  nameWithType: AccountController.Login
- uid: test_versta.Controllers.AccountController.Logout
  name: Logout()
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.Logout
  fullName: test_versta.Controllers.AccountController.Logout()
  nameWithType: AccountController.Logout()
- uid: test_versta.Controllers.AccountController.Logout*
  name: Logout
  href: api/test_versta.Controllers.AccountController.yml
  commentId: Overload:test_versta.Controllers.AccountController.Logout
  isSpec: "True"
  fullName: test_versta.Controllers.AccountController.Logout
  nameWithType: AccountController.Logout
- uid: test_versta.Controllers.AccountController.Register(System.String)
  name: Register(string?)
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.Register(System.String)
  name.vb: Register(String)
  fullName: test_versta.Controllers.AccountController.Register(string?)
  fullName.vb: test_versta.Controllers.AccountController.Register(String)
  nameWithType: AccountController.Register(string?)
  nameWithType.vb: AccountController.Register(String)
- uid: test_versta.Controllers.AccountController.Register(test_versta.ViewModels.RegisterViewModel)
  name: Register(RegisterViewModel)
  href: api/test_versta.Controllers.AccountController.yml
  commentId: M:test_versta.Controllers.AccountController.Register(test_versta.ViewModels.RegisterViewModel)
  fullName: test_versta.Controllers.AccountController.Register(test_versta.ViewModels.RegisterViewModel)
  nameWithType: AccountController.Register(RegisterViewModel)
- uid: test_versta.Controllers.AccountController.Register*
  name: Register
  href: api/test_versta.Controllers.AccountController.yml
  commentId: Overload:test_versta.Controllers.AccountController.Register
  isSpec: "True"
  fullName: test_versta.Controllers.AccountController.Register
  nameWithType: AccountController.Register
- uid: test_versta.Controllers.OrdersController
  name: OrdersController
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: T:test_versta.Controllers.OrdersController
  fullName: test_versta.Controllers.OrdersController
  nameWithType: OrdersController
- uid: test_versta.Controllers.OrdersController.#ctor(test_versta.Data.ApplicationDbContext,Microsoft.AspNetCore.SignalR.IHubContext{test_versta.Hubs.OrdersHub})
  name: OrdersController(ApplicationDbContext, IHubContext<OrdersHub>)
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: M:test_versta.Controllers.OrdersController.#ctor(test_versta.Data.ApplicationDbContext,Microsoft.AspNetCore.SignalR.IHubContext{test_versta.Hubs.OrdersHub})
  name.vb: New(ApplicationDbContext, IHubContext(Of OrdersHub))
  fullName: test_versta.Controllers.OrdersController.OrdersController(test_versta.Data.ApplicationDbContext, Microsoft.AspNetCore.SignalR.IHubContext<test_versta.Hubs.OrdersHub>)
  fullName.vb: test_versta.Controllers.OrdersController.New(test_versta.Data.ApplicationDbContext, Microsoft.AspNetCore.SignalR.IHubContext(Of test_versta.Hubs.OrdersHub))
  nameWithType: OrdersController.OrdersController(ApplicationDbContext, IHubContext<OrdersHub>)
  nameWithType.vb: OrdersController.New(ApplicationDbContext, IHubContext(Of OrdersHub))
- uid: test_versta.Controllers.OrdersController.#ctor*
  name: OrdersController
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: Overload:test_versta.Controllers.OrdersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: test_versta.Controllers.OrdersController.OrdersController
  fullName.vb: test_versta.Controllers.OrdersController.New
  nameWithType: OrdersController.OrdersController
  nameWithType.vb: OrdersController.New
- uid: test_versta.Controllers.OrdersController.Create
  name: Create()
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: M:test_versta.Controllers.OrdersController.Create
  fullName: test_versta.Controllers.OrdersController.Create()
  nameWithType: OrdersController.Create()
- uid: test_versta.Controllers.OrdersController.Create(test_versta.Models.Order)
  name: Create(Order)
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: M:test_versta.Controllers.OrdersController.Create(test_versta.Models.Order)
  fullName: test_versta.Controllers.OrdersController.Create(test_versta.Models.Order)
  nameWithType: OrdersController.Create(Order)
- uid: test_versta.Controllers.OrdersController.Create*
  name: Create
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: Overload:test_versta.Controllers.OrdersController.Create
  isSpec: "True"
  fullName: test_versta.Controllers.OrdersController.Create
  nameWithType: OrdersController.Create
- uid: test_versta.Controllers.OrdersController.Details(System.Nullable{System.Int32})
  name: Details(int?)
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: M:test_versta.Controllers.OrdersController.Details(System.Nullable{System.Int32})
  name.vb: Details(Integer?)
  fullName: test_versta.Controllers.OrdersController.Details(int?)
  fullName.vb: test_versta.Controllers.OrdersController.Details(Integer?)
  nameWithType: OrdersController.Details(int?)
  nameWithType.vb: OrdersController.Details(Integer?)
- uid: test_versta.Controllers.OrdersController.Details*
  name: Details
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: Overload:test_versta.Controllers.OrdersController.Details
  isSpec: "True"
  fullName: test_versta.Controllers.OrdersController.Details
  nameWithType: OrdersController.Details
- uid: test_versta.Controllers.OrdersController.Index
  name: Index()
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: M:test_versta.Controllers.OrdersController.Index
  fullName: test_versta.Controllers.OrdersController.Index()
  nameWithType: OrdersController.Index()
- uid: test_versta.Controllers.OrdersController.Index*
  name: Index
  href: api/test_versta.Controllers.OrdersController.yml
  commentId: Overload:test_versta.Controllers.OrdersController.Index
  isSpec: "True"
  fullName: test_versta.Controllers.OrdersController.Index
  nameWithType: OrdersController.Index
- uid: test_versta.Data
  name: test_versta.Data
  href: api/test_versta.Data.yml
  commentId: N:test_versta.Data
  fullName: test_versta.Data
  nameWithType: test_versta.Data
- uid: test_versta.Data.ApplicationDbContext
  name: ApplicationDbContext
  href: api/test_versta.Data.ApplicationDbContext.yml
  commentId: T:test_versta.Data.ApplicationDbContext
  fullName: test_versta.Data.ApplicationDbContext
  nameWithType: ApplicationDbContext
- uid: test_versta.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{test_versta.Data.ApplicationDbContext})
  name: ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  href: api/test_versta.Data.ApplicationDbContext.yml
  commentId: M:test_versta.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{test_versta.Data.ApplicationDbContext})
  name.vb: New(DbContextOptions(Of ApplicationDbContext))
  fullName: test_versta.Data.ApplicationDbContext.ApplicationDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<test_versta.Data.ApplicationDbContext>)
  fullName.vb: test_versta.Data.ApplicationDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of test_versta.Data.ApplicationDbContext))
  nameWithType: ApplicationDbContext.ApplicationDbContext(DbContextOptions<ApplicationDbContext>)
  nameWithType.vb: ApplicationDbContext.New(DbContextOptions(Of ApplicationDbContext))
- uid: test_versta.Data.ApplicationDbContext.#ctor*
  name: ApplicationDbContext
  href: api/test_versta.Data.ApplicationDbContext.yml
  commentId: Overload:test_versta.Data.ApplicationDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: test_versta.Data.ApplicationDbContext.ApplicationDbContext
  fullName.vb: test_versta.Data.ApplicationDbContext.New
  nameWithType: ApplicationDbContext.ApplicationDbContext
  nameWithType.vb: ApplicationDbContext.New
- uid: test_versta.Data.ApplicationDbContext.Orders
  name: Orders
  href: api/test_versta.Data.ApplicationDbContext.yml
  commentId: P:test_versta.Data.ApplicationDbContext.Orders
  fullName: test_versta.Data.ApplicationDbContext.Orders
  nameWithType: ApplicationDbContext.Orders
- uid: test_versta.Data.ApplicationDbContext.Orders*
  name: Orders
  href: api/test_versta.Data.ApplicationDbContext.yml
  commentId: Overload:test_versta.Data.ApplicationDbContext.Orders
  isSpec: "True"
  fullName: test_versta.Data.ApplicationDbContext.Orders
  nameWithType: ApplicationDbContext.Orders
- uid: test_versta.Hubs
  name: test_versta.Hubs
  href: api/test_versta.Hubs.yml
  commentId: N:test_versta.Hubs
  fullName: test_versta.Hubs
  nameWithType: test_versta.Hubs
- uid: test_versta.Hubs.OrdersHub
  name: OrdersHub
  href: api/test_versta.Hubs.OrdersHub.yml
  commentId: T:test_versta.Hubs.OrdersHub
  fullName: test_versta.Hubs.OrdersHub
  nameWithType: OrdersHub
- uid: test_versta.Models
  name: test_versta.Models
  href: api/test_versta.Models.yml
  commentId: N:test_versta.Models
  fullName: test_versta.Models
  nameWithType: test_versta.Models
- uid: test_versta.Models.ApplicationUser
  name: ApplicationUser
  href: api/test_versta.Models.ApplicationUser.yml
  commentId: T:test_versta.Models.ApplicationUser
  fullName: test_versta.Models.ApplicationUser
  nameWithType: ApplicationUser
- uid: test_versta.Models.ApplicationUser.FullName
  name: FullName
  href: api/test_versta.Models.ApplicationUser.yml
  commentId: P:test_versta.Models.ApplicationUser.FullName
  fullName: test_versta.Models.ApplicationUser.FullName
  nameWithType: ApplicationUser.FullName
- uid: test_versta.Models.ApplicationUser.FullName*
  name: FullName
  href: api/test_versta.Models.ApplicationUser.yml
  commentId: Overload:test_versta.Models.ApplicationUser.FullName
  isSpec: "True"
  fullName: test_versta.Models.ApplicationUser.FullName
  nameWithType: ApplicationUser.FullName
- uid: test_versta.Models.Order
  name: Order
  href: api/test_versta.Models.Order.yml
  commentId: T:test_versta.Models.Order
  fullName: test_versta.Models.Order
  nameWithType: Order
- uid: test_versta.Models.Order.Client
  name: Client
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.Client
  fullName: test_versta.Models.Order.Client
  nameWithType: Order.Client
- uid: test_versta.Models.Order.Client*
  name: Client
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.Client
  isSpec: "True"
  fullName: test_versta.Models.Order.Client
  nameWithType: Order.Client
- uid: test_versta.Models.Order.ClientId
  name: ClientId
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.ClientId
  fullName: test_versta.Models.Order.ClientId
  nameWithType: Order.ClientId
- uid: test_versta.Models.Order.ClientId*
  name: ClientId
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.ClientId
  isSpec: "True"
  fullName: test_versta.Models.Order.ClientId
  nameWithType: Order.ClientId
- uid: test_versta.Models.Order.OrderId
  name: OrderId
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.OrderId
  fullName: test_versta.Models.Order.OrderId
  nameWithType: Order.OrderId
- uid: test_versta.Models.Order.OrderId*
  name: OrderId
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.OrderId
  isSpec: "True"
  fullName: test_versta.Models.Order.OrderId
  nameWithType: Order.OrderId
- uid: test_versta.Models.Order.PickupDate
  name: PickupDate
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.PickupDate
  fullName: test_versta.Models.Order.PickupDate
  nameWithType: Order.PickupDate
- uid: test_versta.Models.Order.PickupDate*
  name: PickupDate
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.PickupDate
  isSpec: "True"
  fullName: test_versta.Models.Order.PickupDate
  nameWithType: Order.PickupDate
- uid: test_versta.Models.Order.RecipientAddress
  name: RecipientAddress
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.RecipientAddress
  fullName: test_versta.Models.Order.RecipientAddress
  nameWithType: Order.RecipientAddress
- uid: test_versta.Models.Order.RecipientAddress*
  name: RecipientAddress
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.RecipientAddress
  isSpec: "True"
  fullName: test_versta.Models.Order.RecipientAddress
  nameWithType: Order.RecipientAddress
- uid: test_versta.Models.Order.RecipientCity
  name: RecipientCity
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.RecipientCity
  fullName: test_versta.Models.Order.RecipientCity
  nameWithType: Order.RecipientCity
- uid: test_versta.Models.Order.RecipientCity*
  name: RecipientCity
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.RecipientCity
  isSpec: "True"
  fullName: test_versta.Models.Order.RecipientCity
  nameWithType: Order.RecipientCity
- uid: test_versta.Models.Order.SenderAddress
  name: SenderAddress
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.SenderAddress
  fullName: test_versta.Models.Order.SenderAddress
  nameWithType: Order.SenderAddress
- uid: test_versta.Models.Order.SenderAddress*
  name: SenderAddress
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.SenderAddress
  isSpec: "True"
  fullName: test_versta.Models.Order.SenderAddress
  nameWithType: Order.SenderAddress
- uid: test_versta.Models.Order.SenderCity
  name: SenderCity
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.SenderCity
  fullName: test_versta.Models.Order.SenderCity
  nameWithType: Order.SenderCity
- uid: test_versta.Models.Order.SenderCity*
  name: SenderCity
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.SenderCity
  isSpec: "True"
  fullName: test_versta.Models.Order.SenderCity
  nameWithType: Order.SenderCity
- uid: test_versta.Models.Order.Weight
  name: Weight
  href: api/test_versta.Models.Order.yml
  commentId: P:test_versta.Models.Order.Weight
  fullName: test_versta.Models.Order.Weight
  nameWithType: Order.Weight
- uid: test_versta.Models.Order.Weight*
  name: Weight
  href: api/test_versta.Models.Order.yml
  commentId: Overload:test_versta.Models.Order.Weight
  isSpec: "True"
  fullName: test_versta.Models.Order.Weight
  nameWithType: Order.Weight
- uid: test_versta.Services
  name: test_versta.Services
  href: api/test_versta.Services.yml
  commentId: N:test_versta.Services
  fullName: test_versta.Services
  nameWithType: test_versta.Services
- uid: test_versta.Services.FutureOrTodayAttribute
  name: FutureOrTodayAttribute
  href: api/test_versta.Services.FutureOrTodayAttribute.yml
  commentId: T:test_versta.Services.FutureOrTodayAttribute
  fullName: test_versta.Services.FutureOrTodayAttribute
  nameWithType: FutureOrTodayAttribute
- uid: test_versta.Services.FutureOrTodayAttribute.IsValid(System.Object)
  name: IsValid(object)
  href: api/test_versta.Services.FutureOrTodayAttribute.yml
  commentId: M:test_versta.Services.FutureOrTodayAttribute.IsValid(System.Object)
  name.vb: IsValid(Object)
  fullName: test_versta.Services.FutureOrTodayAttribute.IsValid(object)
  fullName.vb: test_versta.Services.FutureOrTodayAttribute.IsValid(Object)
  nameWithType: FutureOrTodayAttribute.IsValid(object)
  nameWithType.vb: FutureOrTodayAttribute.IsValid(Object)
- uid: test_versta.Services.FutureOrTodayAttribute.IsValid*
  name: IsValid
  href: api/test_versta.Services.FutureOrTodayAttribute.yml
  commentId: Overload:test_versta.Services.FutureOrTodayAttribute.IsValid
  isSpec: "True"
  fullName: test_versta.Services.FutureOrTodayAttribute.IsValid
  nameWithType: FutureOrTodayAttribute.IsValid
- uid: test_versta.Services.InitialData
  name: InitialData
  href: api/test_versta.Services.InitialData.yml
  commentId: T:test_versta.Services.InitialData
  fullName: test_versta.Services.InitialData
  nameWithType: InitialData
- uid: test_versta.Services.InitialData.SeedRolesAndAdminAsync(Microsoft.AspNetCore.Identity.UserManager{test_versta.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})
  name: SeedRolesAndAdminAsync(UserManager<ApplicationUser>, RoleManager<IdentityRole>)
  href: api/test_versta.Services.InitialData.yml
  commentId: M:test_versta.Services.InitialData.SeedRolesAndAdminAsync(Microsoft.AspNetCore.Identity.UserManager{test_versta.Models.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})
  name.vb: SeedRolesAndAdminAsync(UserManager(Of ApplicationUser), RoleManager(Of IdentityRole))
  fullName: test_versta.Services.InitialData.SeedRolesAndAdminAsync(Microsoft.AspNetCore.Identity.UserManager<test_versta.Models.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>)
  fullName.vb: test_versta.Services.InitialData.SeedRolesAndAdminAsync(Microsoft.AspNetCore.Identity.UserManager(Of test_versta.Models.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole))
  nameWithType: InitialData.SeedRolesAndAdminAsync(UserManager<ApplicationUser>, RoleManager<IdentityRole>)
  nameWithType.vb: InitialData.SeedRolesAndAdminAsync(UserManager(Of ApplicationUser), RoleManager(Of IdentityRole))
- uid: test_versta.Services.InitialData.SeedRolesAndAdminAsync*
  name: SeedRolesAndAdminAsync
  href: api/test_versta.Services.InitialData.yml
  commentId: Overload:test_versta.Services.InitialData.SeedRolesAndAdminAsync
  isSpec: "True"
  fullName: test_versta.Services.InitialData.SeedRolesAndAdminAsync
  nameWithType: InitialData.SeedRolesAndAdminAsync
- uid: test_versta.ViewModels
  name: test_versta.ViewModels
  href: api/test_versta.ViewModels.yml
  commentId: N:test_versta.ViewModels
  fullName: test_versta.ViewModels
  nameWithType: test_versta.ViewModels
- uid: test_versta.ViewModels.LoginViewModel
  name: LoginViewModel
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: T:test_versta.ViewModels.LoginViewModel
  fullName: test_versta.ViewModels.LoginViewModel
  nameWithType: LoginViewModel
- uid: test_versta.ViewModels.LoginViewModel.Email
  name: Email
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: P:test_versta.ViewModels.LoginViewModel.Email
  fullName: test_versta.ViewModels.LoginViewModel.Email
  nameWithType: LoginViewModel.Email
- uid: test_versta.ViewModels.LoginViewModel.Email*
  name: Email
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: Overload:test_versta.ViewModels.LoginViewModel.Email
  isSpec: "True"
  fullName: test_versta.ViewModels.LoginViewModel.Email
  nameWithType: LoginViewModel.Email
- uid: test_versta.ViewModels.LoginViewModel.Password
  name: Password
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: P:test_versta.ViewModels.LoginViewModel.Password
  fullName: test_versta.ViewModels.LoginViewModel.Password
  nameWithType: LoginViewModel.Password
- uid: test_versta.ViewModels.LoginViewModel.Password*
  name: Password
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: Overload:test_versta.ViewModels.LoginViewModel.Password
  isSpec: "True"
  fullName: test_versta.ViewModels.LoginViewModel.Password
  nameWithType: LoginViewModel.Password
- uid: test_versta.ViewModels.LoginViewModel.RememberMe
  name: RememberMe
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: P:test_versta.ViewModels.LoginViewModel.RememberMe
  fullName: test_versta.ViewModels.LoginViewModel.RememberMe
  nameWithType: LoginViewModel.RememberMe
- uid: test_versta.ViewModels.LoginViewModel.RememberMe*
  name: RememberMe
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: Overload:test_versta.ViewModels.LoginViewModel.RememberMe
  isSpec: "True"
  fullName: test_versta.ViewModels.LoginViewModel.RememberMe
  nameWithType: LoginViewModel.RememberMe
- uid: test_versta.ViewModels.LoginViewModel.ReturnUrl
  name: ReturnUrl
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: P:test_versta.ViewModels.LoginViewModel.ReturnUrl
  fullName: test_versta.ViewModels.LoginViewModel.ReturnUrl
  nameWithType: LoginViewModel.ReturnUrl
- uid: test_versta.ViewModels.LoginViewModel.ReturnUrl*
  name: ReturnUrl
  href: api/test_versta.ViewModels.LoginViewModel.yml
  commentId: Overload:test_versta.ViewModels.LoginViewModel.ReturnUrl
  isSpec: "True"
  fullName: test_versta.ViewModels.LoginViewModel.ReturnUrl
  nameWithType: LoginViewModel.ReturnUrl
- uid: test_versta.ViewModels.RegisterViewModel
  name: RegisterViewModel
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: T:test_versta.ViewModels.RegisterViewModel
  fullName: test_versta.ViewModels.RegisterViewModel
  nameWithType: RegisterViewModel
- uid: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  name: ConfirmPassword
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: P:test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  fullName: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
- uid: test_versta.ViewModels.RegisterViewModel.ConfirmPassword*
  name: ConfirmPassword
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  isSpec: "True"
  fullName: test_versta.ViewModels.RegisterViewModel.ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
- uid: test_versta.ViewModels.RegisterViewModel.Email
  name: Email
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: P:test_versta.ViewModels.RegisterViewModel.Email
  fullName: test_versta.ViewModels.RegisterViewModel.Email
  nameWithType: RegisterViewModel.Email
- uid: test_versta.ViewModels.RegisterViewModel.Email*
  name: Email
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.Email
  isSpec: "True"
  fullName: test_versta.ViewModels.RegisterViewModel.Email
  nameWithType: RegisterViewModel.Email
- uid: test_versta.ViewModels.RegisterViewModel.FullName
  name: FullName
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: P:test_versta.ViewModels.RegisterViewModel.FullName
  fullName: test_versta.ViewModels.RegisterViewModel.FullName
  nameWithType: RegisterViewModel.FullName
- uid: test_versta.ViewModels.RegisterViewModel.FullName*
  name: FullName
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.FullName
  isSpec: "True"
  fullName: test_versta.ViewModels.RegisterViewModel.FullName
  nameWithType: RegisterViewModel.FullName
- uid: test_versta.ViewModels.RegisterViewModel.Password
  name: Password
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: P:test_versta.ViewModels.RegisterViewModel.Password
  fullName: test_versta.ViewModels.RegisterViewModel.Password
  nameWithType: RegisterViewModel.Password
- uid: test_versta.ViewModels.RegisterViewModel.Password*
  name: Password
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.Password
  isSpec: "True"
  fullName: test_versta.ViewModels.RegisterViewModel.Password
  nameWithType: RegisterViewModel.Password
- uid: test_versta.ViewModels.RegisterViewModel.ReturnUrl
  name: ReturnUrl
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: P:test_versta.ViewModels.RegisterViewModel.ReturnUrl
  fullName: test_versta.ViewModels.RegisterViewModel.ReturnUrl
  nameWithType: RegisterViewModel.ReturnUrl
- uid: test_versta.ViewModels.RegisterViewModel.ReturnUrl*
  name: ReturnUrl
  href: api/test_versta.ViewModels.RegisterViewModel.yml
  commentId: Overload:test_versta.ViewModels.RegisterViewModel.ReturnUrl
  isSpec: "True"
  fullName: test_versta.ViewModels.RegisterViewModel.ReturnUrl
  nameWithType: RegisterViewModel.ReturnUrl
